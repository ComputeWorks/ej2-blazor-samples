@page "/Schedule/ExternalDragDrop"

@using Syncfusion.EJ2.Blazor.Schedule
@using Syncfusion.EJ2.Blazor.Navigations
@using Newtonsoft.Json;


@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "External Drag And Drop";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This example illustrates how to drag and drop the events from an external source into scheduler. Here, you can drag and drop the items from TreeView control into scheduler.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
           In this example, <code>ResourceHeaderTemplate</code> is used to change the default appearance of the resource header
            column. Within the <code>actionBegin</code> event of scheduler, the dragged item from the TreeView control is removed,
            when it is being dragged and dropped onto the scheduler. When the item is being dropped onto the scheduler, the event editor is
            explicitly made to open with the target details by invoking the <code>openEditor</code> method of scheduler within the <code>nodeDragStop</code> event of TreeView.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <div class="schedule-container e-droppable">
            <div class="title-container">
                <h1 class="title-text">Doctor's Appointments</h1>
            </div>
            <EjsSchedule TValue="ScheduleData.HospitalData" @ref="ScheduleRef" Width="100%" Height="650px" CssClass="schedule-drag-drop" SelectedDate="@(new DateTime(2018, 7, 1))">
                <ScheduleGroup EnableCompactView="false" Resources="@Resources"></ScheduleGroup>
                <ScheduleResources>
                    <ScheduleResource DataSource="@Departments" Field="DepartmentID" Title="Department" Name="Departments" TextField="text" IdField="id" ColorField="color"></ScheduleResource>
                    <ScheduleResource DataSource="@Consultants" Field="ConsultantID" Title="Consultant" Name="Consultants" TextField="text" IdField="id" ColorField="color" GroupIDField="groupId" AllowMultiple="false"></ScheduleResource>
                </ScheduleResources>
                <ScheduleViews>
                    <ScheduleView Option="View.TimelineDay"></ScheduleView>
                    <ScheduleView Option="View.TimelineMonth"></ScheduleView>
                </ScheduleViews>
                <ScheduleWorkHours Highlight="true" Start="08:00" End="18:00"></ScheduleWorkHours>
                <ScheduleEventSettings DataSource="@DataSource">
                    <ScheduleField>
                        <FieldSubject Name="Name" Title="Patient Name"></FieldSubject>
                        <FieldStartTime Name="StartTime" Title="From"></FieldStartTime>
                        <FieldEndTime Name="EndTime" Title="To"></FieldEndTime>
                        <FieldDescription Name="Description" Title="Reason"></FieldDescription>
                    </ScheduleField>
                </ScheduleEventSettings>
            </EjsSchedule>
        </div>
        <div class="treeview-container">
            <div class="title-container">
                <h2 class="title-text">Waiting List</h2>
            </div>
            <EjsTreeView TValue="ScheduleData.HospitalData" AllowDragAndDrop="true" CssClass="treeview-external-drag">
                <TreeViewEvents TValue="ScheduleData.HospitalData" OnNodeDragged="OnTreeViewDragStop"></TreeViewEvents>
                <TreeViewFieldsSettings DataSource="@TreeViewData" Id="Id" Text="Name"></TreeViewFieldsSettings>
            </EjsTreeView>
        </div>
    </div>
</div>

@code{
    EjsSchedule<ScheduleData.HospitalData> ScheduleRef;
    public List<ScheduleData.HospitalData> DataSource = new ScheduleData().GetHospitalData();
    public List<ScheduleData.HospitalData> TreeViewData = new ScheduleData().GetWaitingListData();
    public string[] Resources = new string[] { "Departments", "Consultants" };
    private List<object> Departments { get; set; } = new List<object> {
        new { text = "GENERAL", id = 1, color = "#bbdc00" },
        new { text = "DENTAL", id = 2, color = "#9e5fff" }
    };
    private List<object> Consultants { get; set; } = new List<object> {
        new { text = "Alice", id = 1, groupId = 1, color = "#bbdc00", designation = "Cardiologist" },
        new { text = "Nancy", id = 2, groupId = 2, color = "#9e5fff", designation = "Orthodontist" },
        new { text = "Robert", id = 3, groupId = 1, color = "#bbdc00", designation = "Optometrist" },
        new { text = "Robson", id = 4, groupId = 2, color = "#9e5fff", designation = "Periodontist" },
        new { text = "Laura", id = 5, groupId = 1, color = "#bbdc00", designation = "Orthopedic" },
        new  { text = "Margaret", id = 6, groupId = 2, color = "#9e5fff", designation = "Endodontist" }
    };
    class GroupData
    {
        public int DepartmentID { get; set; }
        public int ConsultantID { get; set; }
    }
    public async void OnTreeViewDragStop(DragAndDropEventArgs args)
    {
        args.Cancel = true;
        object isScheduleSlot = await args.Target.GetAttribute("role");
        if (isScheduleSlot != null && isScheduleSlot.ToString() == "gridcell")
        {
            CellClickEventArgs cellData = await ScheduleRef.GetCellDetails(args.Target);
            var resourceDetails = await ScheduleRef.GetResourcesByIndex(cellData.GroupIndex);
            GroupData groupData = JsonConvert.DeserializeObject<GroupData>(JsonConvert.SerializeObject(resourceDetails.GroupData));
            Random rnd = new Random();
            int Id = rnd.Next(1000);
            ScheduleData.HospitalData eventData = new ScheduleData.HospitalData
            {
                Id = Id,
                Name = args.DraggedNodeData.Text,
                StartTime = cellData.StartTime,
                EndTime = cellData.EndTime,
                IsAllDay = cellData.IsAllDay,
                ConsultantID = groupData.ConsultantID,
                DepartmentID = groupData.DepartmentID
            };
            ScheduleRef.OpenEditor(eventData, CurrentAction.Add, true);
        }
    }
}
<style>
    /* custom code start*/
    .content-wrapper {
        display: -ms-flexbox;
        display: flex;
    }

    .e-device-hover {
        background-color: #e0e0e0 !important;
    }

    .schedule-container {
        padding-right: 10px;
        width: 100%;
    }

    .title-container {
        padding-bottom: 10px;
    }

    .title-text {
        font-size: 18px;
        margin: 0px;
        font-weight: bold;
        text-align: center;
    }
    /* custom code end*/
    .treeview-external-drag #waiting {
        height: 100%;
        padding: 0;
    }

    .treeview-external-drag #waitid {
        float: left;
        width: 13%;
        text-align: center;
        line-height: 30px;
        font-size: 13px;
        font-family: "Segoe UI";
        color: #f9920b;
        overflow: hidden;
        margin: 9px 0;
        padding: 0 2px 0 0;
    }

    .treeview-external-drag #waitdetails {
        width: 95%;
        float: left;
        height: 100%;
        padding: 0;
    }

    .treeview-external-drag #waitlist {
        width: 100%;
        height: 50%;
        font-weight: bold;
        font-family: "Segoe UI";
        font-size: 12px;
        color: #545554;
        padding: 5px 0 0 10px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .treeview-external-drag #waitcategory {
        height: 50%;
        font-family: "Segoe UI";
        font-size: 10px;
        color: #545554;
        opacity: 0.6;
        padding-left: 10px;
        padding-top: 5px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .treeview-external-drag .e-list-text,
    .e-bigger .treeview-external-drag .e-list-text {
        background: white;
        border: 0.5px solid #E1E7EC;
        height: 50px;
        line-height: 15px;
        padding: 0 5px;
        width: 220px;
    }

    .treeview-external-drag .e-list-parent,
    .e-bigger .treeview-external-drag .e-list-parent {
        height: 100%;
        padding: 0 2px;
    }

    .treeview-external-drag .e-list-item,
    .e-bigger .treeview-external-drag .e-list-item {
        height: 100%;
        padding: 0 0 5px 0;
    }

    .treeview-external-drag .e-fullrow,
    .e-bigger .treeview-external-drag .e-fullrow {
        height: 55px;
    }

    .treeview-external-drag .e-list-item.e-hover > .e-fullrow,
    .treeview-external-drag .e-list-item.e-active > .e-fullrow,
    .treeview-external-drag .e-list-item.e-active.e-hover > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-hover > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-active > .e-fullrow,
    .e-bigger .treeview-external-drag .e-list-item.e-active.e-hover > .e-fullrow {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none !important;
    }

    .treeview-external-drag .e-text-content,
    .e-bigger .treeview-external-drag .e-text-content {
        padding: 0;
    }

    .e-drag-item.e-treeview.treeview-external-drag,
    .e-bigger .e-drag-item.e-treeview.treeview-external-drag {
        padding: 0 !important;
    }

    .e-schedule.schedule-drag-drop .e-timeline-view .e-resource-left-td,
    .e-schedule.schedule-drag-drop .e-timeline-month-view .e-resource-left-td {
        width: 160px;
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-category {
        padding-left: 30px
    }

    .e-schedule.e-rtl.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-category {
        padding-right: 30px
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category,
    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-name {
        padding: 5px
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-parent-node .specialist-name {
        padding: 0 10px
    }

    .e-schedule.schedule-drag-drop .e-resource-cells.e-child-node .specialist-category .specialist-image {
        width: 45px;
        height: 40px;
        float: left;
        border-radius: 50%;
        margin-right: 10px;
    }

    .e-schedule.schedule-drag-drop .specialist-name {
        font-size: 13px;
    }

    .e-schedule.schedule-drag-drop .specialist-designation {
        font-size: 10px;
    }

    .e-schedule-dialog .e-all-day-time-zone-row,
    .e-schedule-dialog .e-location-container,
    .e-bigger .e-schedule-dialog .e-all-day-time-zone-row,
    .e-bigger .e-schedule-dialog .e-location-container {
        display: none;
    }

    .e-schedule-dialog .e-subject-container,
    .e-bigger .e-schedule-dialog .e-subject-container {
        padding-right: 0;
        width: 100%;
    }

    .e-schedule-dialog.e-rtl .e-subject-container,
    .e-bigger .e-schedule-dialog.e-rtl .e-subject-container {
        padding-left: 0;
    }

    @@media (max-width: 550px) {
        /* custom code start*/
        .content-wrapper {
            display: block;
        }

        .schedule-container {
            padding-bottom: 10px
        }
        /* custom code end*/
        .treeview-external-drag.e-treeview,
        .e-bigger .treeview-external-drag.e-treeview {
            width: 225px;
        }

            .e-bigger .treeview-external-drag.e-treeview.e-drag-item {
                position: relative !important;
            }
    }
</style>