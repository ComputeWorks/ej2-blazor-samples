@page "/Charts/PolarArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Area";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates polar series with area type for average sales comparison of products in recent year.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the line type charts. Line type charts are used to represent time-dependent data, showing trends in data at equal intervals.
        You can use <code>DashArray</code>, <code>Width</code>, <code>Fill</code> properties to customize the line. <code>Marker</code> and <code>DataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}@*End:Hidden*@
<div class="row">
<div class="col-lg-9 control-section">
    <EjsChart Title="Average Sales Comparison">
        <ChartTooltipSettings Enable="true">
        </ChartTooltipSettings>
        <ChartPrimaryXAxis Interval="1" Coefficient="100" LabelPlacement="LabelPlacement.OnTicks" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Revenue in Millios" LabelFormat="{value}M"></ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@dataSource" Opacity=0.5 Name="Product A" XName="x" Width="2" YName="y" Type="@seriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@dataSource" Opacity=0.5 Name="Product B" XName="x" Width="2" YName="y1" Type="@seriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@dataSource" Opacity=0.5 Name="Product C" XName="x" Width="2" YName="y2" Type="@seriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>
    <div class="col-lg-3 property-section">
        <table id="property" style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <select id="SelectSeriesType" @onchange="changeSeriesType">
                            <option value="Polar">Polar</option>
                            <option value="Radar">Radar</option>
                        </select>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
@code{
    ChartSeriesType seriesType = ChartSeriesType.Polar;
    public void changeSeriesType(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.seriesType = (ChartSeriesType)Enum.Parse(typeof(ChartSeriesType), args.Value.ToString(), true);
    }
    public class PolarAreaChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
    }
    public List<PolarAreaChartData> dataSource = new List<PolarAreaChartData>
    {
          new PolarAreaChartData { x= "2000", y= 4  , y1= 2.6, y2= 2.8},
          new PolarAreaChartData { x= "2001", y= 3.0, y1= 2.8, y2= 2.5 },
          new PolarAreaChartData { x= "2002", y= 3.8, y1= 2.6, y2= 2.8 },
          new PolarAreaChartData { x= "2003", y= 3.4, y1= 3  , y2= 3.2 },
          new PolarAreaChartData { x= "2004", y= 3.2, y1= 3.6, y2= 2.9 },
          new PolarAreaChartData { x= "2005", y= 3.9, y1= 3  , y2= 2   }
    };
}